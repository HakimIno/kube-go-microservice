basePath: /
definitions:
  models.UserCreateRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserUpdateRequest:
    properties:
      avatar:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://github.com/your-username/user-service
  description: This is a user management service API built with Hertz framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: User Service API
  version: "1.0"
paths:
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID or deletion failed
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve user information by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user profile information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data or user ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Update user information
      tags:
      - users
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials or account deactivated
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with the provided information
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data or user already exists
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
