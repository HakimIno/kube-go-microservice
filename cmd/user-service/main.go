package main

import (
	"log"

	_ "kube/docs" // This is generated by swag init
	"kube/internal/config"
	"kube/internal/database"
	"kube/pkg/models"
	"kube/pkg/server"
	"kube/services/user"
	"time"
)

// @title User Service API
// @version 1.0
// @description This is a user management service API built with Hertz framework.

// @contact.name API Support
// @contact.url https://github.com/your-username/kube
// @contact.email support@example.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8081
// @BasePath /
// @schemes http https

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Enter the token with the `Bearer ` prefix, e.g. "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

func main() {
	cfg := config.Load()
	db := database.Init(cfg.Database)

	if err := db.AutoMigrate(&models.User{}); err != nil {
		log.Fatal("Failed to migrate database:", err)
	}

	userService := user.NewService(db, cfg.JWT.SecretKey)

	serverConfig := server.ServerConfig{
		Port:         "8081",
		ServiceName:  "user-service",
		SwaggerURL:   "http://localhost:8081",
		RateLimit:    100,
		RateDuration: time.Minute,
	}

	srv := server.NewServer(serverConfig)
	user.RegisterRoutes(srv.Hertz, userService)
	srv.Start()
}
